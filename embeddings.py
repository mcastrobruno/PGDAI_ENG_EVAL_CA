# -*- coding: utf-8 -*-
"""embeddings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xg9Qc1DDFGybF1ssSwK2V-XL3QK4CIZl
"""

import numpy as np
import pandas as pd
from Config import *
import random
seed =0
random.seed(seed)
np.random.seed(seed)

def get_tfidf_embd_type2(df:pd.DataFrame):
    from sklearn.feature_extraction.text import TfidfVectorizer
    tfidfconverter = TfidfVectorizer(max_features=2000, min_df=4, max_df=0.90)
    chain_1 = 0
    data = df[Config.TICKET_SUMMARY] + ' ' + df[Config.INTERACTION_CONTENT]
    chain_1 = df['Type 2']
    X = tfidfconverter.fit_transform(data).toarray()
    return X, chain_1

def get_tfidf_embd_type2_3(df:pd.DataFrame):
    from sklearn.feature_extraction.text import TfidfVectorizer
    tfidfconverter = TfidfVectorizer(max_features=2000, min_df=4, max_df=0.90)
    data = df[Config.TICKET_SUMMARY] + ' ' + df[Config.INTERACTION_CONTENT]
    chain_2 = 0
    for t2 in range(len(df)):
      if df['Type 2'].iloc[t2] == df['y2'].iloc[t2]:
        chain_2 += df['Type 2'].iloc[t2] + df['Type 3'].iloc[t2] 
      elif df['Type 2'].iloc[t2] != df['y2'].iloc[t2]:
        chain_2 += null
    X = tfidfconverter.fit_transform(data).toarray()
    return X, chain_2

def get_tfidf_embd_type2_3_4(df:pd.DataFrame):
    from sklearn.feature_extraction.text import TfidfVectorizer
    tfidfconverter = TfidfVectorizer(max_features=2000, min_df=4, max_df=0.90)
    data = df[Config.TICKET_SUMMARY] + ' ' + df[Config.INTERACTION_CONTENT]
    chain_3 = 0
    for t2 in range(len(df)):
      if df['Type 2'].iloc[t2] == df['y2'].iloc[t2]:
        chain_3 += df['Type 2'].iloc[t2] + df['Type 3'].iloc[t2] + df['Type 4'].iloc[t2] 
      elif df['Type 2'].iloc[t2] != df['y2'].iloc[t2]:
        chain_3 += null
    X = tfidfconverter.fit_transform(data).toarray()
    return X, chain_3

def combine_embd(X1, X2):
    return np.concatenate((X1, X2), axis=1)